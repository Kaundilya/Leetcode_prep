class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
      if(grid.size()<=0 || grid[0].size()<=0)
      {
          return 0;
      }
        int row=grid.size();
        int col=grid[0].size();
        int cnt=0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(grid[i][j]=='1'){
                    dfs(grid,i,j);
                    cnt++;}
            }
        }
        return cnt;
    }
    
    void dfs(vector<vector<char>>& grid,int i,int j)
    {
         int row=grid.size();
        int col=grid[0].size();
        if(i<0 || i>row-1 || j<0 || j>col-1 || grid[i][j]!='1')
            return;
        grid[i][j]='2';
        
        
            dfs(grid,i-1,j);
            dfs(grid,i+1,j);
            dfs(grid,i,j-1);
            dfs(grid,i,j+1);
        
            
    }
    
};
