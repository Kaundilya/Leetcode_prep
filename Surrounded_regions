class Solution {
public:
    void solve(vector<vector<char>>& board) {
    if(board.size()<=0 || board[0].size()<=0)
        return;
      int row=board.size();
        int col=board[0].size();
        
        
        for(int i=0;i<row;i++)
        {
            if(board[i][0]=='O')
                dfs(board,i,0);
            if(board[i][col-1]=='O')
                dfs(board,i,col-1);
            
        }
        
        for(int j=1;j<col-1;j++)
        {
            if(board[0][j]=='O')
                dfs(board,0,j);
            if(board[row-1][j]=='O')
                dfs(board,row-1,j);
        }
        
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(board[i][j]=='*')
                    board[i][j]='O';
                else 
                    board[i][j]='X';
            }
        }
        
        
    }
    
    void dfs(vector<vector<char>> & board,int i,int j)
    {
        int row=board.size();
        int col=board[0].size();
        if(i<0 || i>row || j<0 || j>col)
        {
            return;
        }
        board[i][j]='*';
        if(i>1 && board[i-1][j]=='O')
            dfs(board,i-1,j);
        if(i<row-2 && board[i+1][j]=='O')
        {
            dfs(board,i+1,j);
        }
        if(j>1 && board[i][j-1]=='O')
            dfs(board,i,j-1);
        if(j<col-2 && board[i][j+1]=='O')
            dfs(board,i,j+1);
    }
};
